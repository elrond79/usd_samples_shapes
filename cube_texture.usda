#usda 1.0
(
    defaultPrim = "pCube1"
    upAxis = "Y"
)

def Mesh "pCube1" (
    kind = "component"
)
{
    uniform bool doubleSided = 1
    float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
    rel material:binding = </pCube1/Looks/lambert2SG>
    //normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
//        interpolation = "faceVarying"
//    )
    point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
    uniform token subdivisionScheme = "fob"
    color3f[] primvars:displayColor = [(0, 0, 0)] (
        customData = {
            dictionary Maya = {
                bool generated = 1
            }
        }
    )
    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 2), (0, 2), (1, 3), (0, 3), (1, 4), (0, 4), (2, 0), (2, 1), (-1, 0), (-1, 1)] (
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]

    def Scope "Looks"
    {
        def Material "lambert2SG"
        {
            token outputs:glslfx:surface.connect = </pCube1/Looks/lambert2SG/lambert2.outputs:out>
            token outputs:surface.connect = </pCube1/Looks/lambert2SG/lambert2.outputs:out>

            def Shader "place2dTexture1"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "st"
                texCoord2f outputs:result
            }

            def Shader "file1"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/rgbcym_udim.1001.pNg@
                texCoord2f inputs:st = (0, 0)
                texCoord2f inputs:st.connect = </pCube1/Looks/lambert2SG/place2dTexture1.outputs:result>
                float inputs:textureMemory = 100000000
                token inputs:wrapS = "mirror"
                token inputs:wrapT = "clamp"
                // Commented out, but this works!
                //float3 outputs:foobar
                float3 outputs:rgb
            }

            def Shader "lambert2"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.01
                float3 inputs:diffuseColor = (0, 1, 0)
                // Commented out, but this works!
                //float3 inputs:diffuseColor.connect = </pCube1/Looks/lambert2SG/file1.outputs:dontexist>
                float3 inputs:diffuseColor.connect = </pCube1/Looks/lambert2SG/file1.outputs:rgb>
                float inputs:displacement = 0
                float3 inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:roughness = 1
                float3 inputs:specularColor = (1, 1, 1)
                int inputs:useSpecularWorkflow = 0
                token outputs:out
            }
        }
    }
}

