#usda 1.0
(
    defaultPrim = "pCube1"
    endTimeCode = 24
    startTimeCode = 1
    upAxis = "Y"
)

def Xform "pCube1" (
    kind = "component"
)
{
    double3 xformOp:translate.timeSamples = {
        1: (-10, 0, 0),
        2: (-9.889866031067642, 0, 0),
        3: (-9.572614448919207, 0, 0),
        4: (-9.067970740527656, 0, 0),
        5: (-8.395660392865949, 0, 0),
        6: (-7.575408892907044, 0, 0),
        7: (-6.626941727623901, 0, 0),
        8: (-5.569984383989481, 0, 0),
        9: (-4.424262348976741, 0, 0),
        10: (-3.2095011095586425, 0, 0),
        11: (-1.945426152708146, 0, 0),
        12: (-0.6517629653982091, 0, 0),
        13: (0.6517629653982056, 0, 0),
        14: (1.9454261527081478, 0, 0),
        15: (3.2095011095586443, 0, 0),
        16: (4.42426234897674, 0, 0),
        17: (5.569984383989482, 0, 0),
        18: (6.626941727623901, 0, 0),
        19: (7.575408892907042, 0, 0),
        20: (8.395660392865953, 0, 0),
        21: (9.067970740527656, 0, 0),
        22: (9.57261444891921, 0, 0),
        23: (9.88986603106764, 0, 0),
        24: (10, 0, 0),
    }
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Mesh "pCubeShape1"
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
        uniform token subdivisionScheme = "none"
    }
}

